#!/usr/bin/env ruby
ENV['TEST_HOST'] ||= "www.rubyops.net"
URLS= %w{  / /tag /tag/introduction /tag/nginx /tag/aws /tag/how-to /tag/mysql /tag/ruby%20on%20rails /tag/bundler /tag/unicorn /tag/rspec /tag/vcr /tag/sinatra /tag/vlad /tag/ssh /tag/rack /tag/mobile /tag/haml /tag/erb /tag/vlad-push /tag/deployment /tag/rake /tag/mongo_mapper /tag/caching /tag/webmock /tag/mongomapper /tag/mongoid /tag/rails /tag/database /tag/newrelic /tag/rackup /tag/ios /tag/iphone /tag/chrome /tag/application%20cache /tag/cacheing /tag/off%20toppic /tag/cache /tag/gruff /tag/python /tag/ruby /tag/mongodb /tag/memcached /tag/mongo /tag/git /tag/github /tag/programming /tag/duality /tag/monogocached /tag/diskcached /tag/benchmark /tag/httperf /tag/httperfrb /tag/performance%20testing /tag/ubuntu /tag/hp%20folio%2013 /tag/wireless /tag/off%20topic /tag/bash /tag/linux /tag/iptables /tag/security /2012/05/29/introduction /2012/05/29/using_nginx_and_aws_to_proxy_sub-domains /2012/05/29/how-to_setup_mysql_and_ror_on_aws /2012/05/29/mocking_http_response_body_for_rspec /2012/05/29/sourcing_and_setting_environment_variables_in_ruby /2012/05/29/dynamically_generated_object_with_accessors /2012/05/30/sinatra_mobile_dection_-_rack-mobile-detect /2012/05/30/configurable_template_engine_in_sinatra /2012/05/31/haml_link_trailing_whitespace_sucks /2012/05/31/vlad-push /2012/06/02/mongomapper_overwriting_a_collection_name /2012/06/01/killing_whitespace_in_haml /2012/06/04/caching_external_http_requests_with_vcr_in_rack /2012/06/12/migrating_from_mongomapper_to_mongoid /2012/06/16/setting_up_newrelic_on_sinatra /2012/06/29/chrome_for_ios /2012/07/02/link_application_cache_is_a_douchbag /2012/07/13/mongocached_simple_cache_using_mongodb /2012/07/18/hello_world /2012/07/06/diskcached_simple_disk_cacheing_for_ruby /2012/05/29/deploy_sinatra_with_vlad_and_git /2012/07/21/duality_two_caches_at_once /2012/07/21/benchmarking_in_ruby /2012/07/30/performance_testing_with_httperf /2012/08/10/automating_performance_testing_with_httperfrb /2012/08/13/httperf-0_9_1_with_individual_connection_times /2012/08/13/httperfgrapher_0_0_4 /2012/08/27/fixing_wireless_on_the_hp_folio_13_when_using_linux /2012/09/05/executing_bash_from_ruby /2012/09/15/executing_bash_from_python /2012/09/18/iptables_rules_examples /archive }

fails = []
URLS.each do |url|
    if system("curl -s http://#{ENV['TEST_HOST']}#{url} > /dev/null")
        print "+"
    else
        print "-"
        fails.push url
    end
end

unless fails.empty?
  puts "FAILURES:"
  fails.each do |failure|
    puts " - #{failure}"
  end
  exit 1
else
  exit 0
end
