Date: 09 May 2013 12:00
Title: Deleting a git commit
Categories: git
Summary: Simple methods for deleting both local and remote git commits.

# Deleting a `git commit`

> **WARNING!**
>
> These methods are dangerous. They can and will completly distroy without warning.


Assuming you are sitting on a single commit and would like to remove it.

    :::shell
    $ git reset --hard HEAD~1

> Note on the above. You can replace the number (`1`) with the number of commits you want to rewind.


If you have an uncommited change, which needs to be cleared, use the following.

    :::shell
    $ git reset --hard HEAD


To remove multiple commits.

    :::shell
    $ git reset --hard <sha1-commit-id>


To remove **all local commits** and reset to the remote origin.

    :::shell
    $ git reset --hard origin


**If you already pushed the commits you wish to delete, you will need to do a force push to get rid of it.**

    :::shell
    $ git push origin HEAD --force

> **WARNING!**
> 
> The above can and will wipe out large sets of changes and do very bad things, if you do something you did not mean to. I strongly recommend doing this on a branch, or creating a backup tag before proceeding.

